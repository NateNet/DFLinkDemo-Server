//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace Demandforce.DFLinkServer.DAL.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DFLinkSTEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DFLinkSTEntities object using the connection string found in the 'DFLinkSTEntities' section of the application configuration file.
        /// </summary>
        public DFLinkSTEntities() : base("name=DFLinkSTEntities", "DFLinkSTEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DFLinkSTEntities object.
        /// </summary>
        public DFLinkSTEntities(string connectionString) : base(connectionString, "DFLinkSTEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DFLinkSTEntities object.
        /// </summary>
        public DFLinkSTEntities(EntityConnection connection) : base(connection, "DFLinkSTEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Task> Tasks
        {
            get
            {
                if ((_Tasks == null))
                {
                    _Tasks = base.CreateObjectSet<Task>("Tasks");
                }
                return _Tasks;
            }
        }
        private ObjectSet<Task> _Tasks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaskLog> TaskLogs
        {
            get
            {
                if ((_TaskLogs == null))
                {
                    _TaskLogs = base.CreateObjectSet<TaskLog>("TaskLogs");
                }
                return _TaskLogs;
            }
        }
        private ObjectSet<TaskLog> _TaskLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaskParameter> TaskParameters
        {
            get
            {
                if ((_TaskParameters == null))
                {
                    _TaskParameters = base.CreateObjectSet<TaskParameter>("TaskParameters");
                }
                return _TaskParameters;
            }
        }
        private ObjectSet<TaskParameter> _TaskParameters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaskSchedule> TaskSchedules
        {
            get
            {
                if ((_TaskSchedules == null))
                {
                    _TaskSchedules = base.CreateObjectSet<TaskSchedule>("TaskSchedules");
                }
                return _TaskSchedules;
            }
        }
        private ObjectSet<TaskSchedule> _TaskSchedules;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tasks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTasks(Task task)
        {
            base.AddObject("Tasks", task);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TaskLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaskLogs(TaskLog taskLog)
        {
            base.AddObject("TaskLogs", taskLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TaskParameters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaskParameters(TaskParameter taskParameter)
        {
            base.AddObject("TaskParameters", taskParameter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TaskSchedules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaskSchedules(TaskSchedule taskSchedule)
        {
            base.AddObject("TaskSchedules", taskSchedule);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DFLinkSTModel", Name="Task")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Task : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Task object.
        /// </summary>
        /// <param name="licenseKey">Initial value of the LicenseKey property.</param>
        /// <param name="action">Initial value of the Action property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="scheduleType">Initial value of the ScheduleType property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        public static Task CreateTask(global::System.String licenseKey, global::System.String action, global::System.Int32 status, global::System.String name, global::System.Int32 scheduleType, global::System.Int32 id)
        {
            Task task = new Task();
            task.LicenseKey = licenseKey;
            task.Action = action;
            task.Status = status;
            task.Name = name;
            task.ScheduleType = scheduleType;
            task.Id = id;
            return task;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LicenseKey
        {
            get
            {
                return _LicenseKey;
            }
            set
            {
                if (_LicenseKey != value)
                {
                    OnLicenseKeyChanging(value);
                    ReportPropertyChanging("LicenseKey");
                    _LicenseKey = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LicenseKey");
                    OnLicenseKeyChanged();
                }
            }
        }
        private global::System.String _LicenseKey;
        partial void OnLicenseKeyChanging(global::System.String value);
        partial void OnLicenseKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Action
        {
            get
            {
                return _Action;
            }
            set
            {
                OnActionChanging(value);
                ReportPropertyChanging("Action");
                _Action = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Action");
                OnActionChanged();
            }
        }
        private global::System.String _Action;
        partial void OnActionChanging(global::System.String value);
        partial void OnActionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScheduleType
        {
            get
            {
                return _ScheduleType;
            }
            set
            {
                OnScheduleTypeChanging(value);
                ReportPropertyChanging("ScheduleType");
                _ScheduleType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScheduleType");
                OnScheduleTypeChanged();
            }
        }
        private global::System.Int32 _ScheduleType;
        partial void OnScheduleTypeChanging(global::System.Int32 value);
        partial void OnScheduleTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DFLinkSTModel", Name="TaskLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaskLog object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="taskId">Initial value of the TaskId property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        /// <param name="createTime">Initial value of the CreateTime property.</param>
        /// <param name="licenseKey">Initial value of the LicenseKey property.</param>
        public static TaskLog CreateTaskLog(global::System.Int32 id, global::System.Int32 taskId, global::System.String message, global::System.DateTime createTime, global::System.String licenseKey)
        {
            TaskLog taskLog = new TaskLog();
            taskLog.Id = id;
            taskLog.TaskId = taskId;
            taskLog.Message = message;
            taskLog.CreateTime = createTime;
            taskLog.LicenseKey = licenseKey;
            return taskLog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskId
        {
            get
            {
                return _TaskId;
            }
            set
            {
                OnTaskIdChanging(value);
                ReportPropertyChanging("TaskId");
                _TaskId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaskId");
                OnTaskIdChanged();
            }
        }
        private global::System.Int32 _TaskId;
        partial void OnTaskIdChanging(global::System.Int32 value);
        partial void OnTaskIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateTime
        {
            get
            {
                return _CreateTime;
            }
            set
            {
                OnCreateTimeChanging(value);
                ReportPropertyChanging("CreateTime");
                _CreateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateTime");
                OnCreateTimeChanged();
            }
        }
        private global::System.DateTime _CreateTime;
        partial void OnCreateTimeChanging(global::System.DateTime value);
        partial void OnCreateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LicenseKey
        {
            get
            {
                return _LicenseKey;
            }
            set
            {
                OnLicenseKeyChanging(value);
                ReportPropertyChanging("LicenseKey");
                _LicenseKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LicenseKey");
                OnLicenseKeyChanged();
            }
        }
        private global::System.String _LicenseKey;
        partial void OnLicenseKeyChanging(global::System.String value);
        partial void OnLicenseKeyChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DFLinkSTModel", Name="TaskParameter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskParameter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaskParameter object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="taskId">Initial value of the TaskId property.</param>
        /// <param name="licenseKey">Initial value of the LicenseKey property.</param>
        /// <param name="key">Initial value of the Key property.</param>
        public static TaskParameter CreateTaskParameter(global::System.Int32 id, global::System.Int32 taskId, global::System.String licenseKey, global::System.String key)
        {
            TaskParameter taskParameter = new TaskParameter();
            taskParameter.Id = id;
            taskParameter.TaskId = taskId;
            taskParameter.LicenseKey = licenseKey;
            taskParameter.Key = key;
            return taskParameter;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskId
        {
            get
            {
                return _TaskId;
            }
            set
            {
                OnTaskIdChanging(value);
                ReportPropertyChanging("TaskId");
                _TaskId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaskId");
                OnTaskIdChanged();
            }
        }
        private global::System.Int32 _TaskId;
        partial void OnTaskIdChanging(global::System.Int32 value);
        partial void OnTaskIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LicenseKey
        {
            get
            {
                return _LicenseKey;
            }
            set
            {
                OnLicenseKeyChanging(value);
                ReportPropertyChanging("LicenseKey");
                _LicenseKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LicenseKey");
                OnLicenseKeyChanged();
            }
        }
        private global::System.String _LicenseKey;
        partial void OnLicenseKeyChanging(global::System.String value);
        partial void OnLicenseKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Key
        {
            get
            {
                return _Key;
            }
            set
            {
                OnKeyChanging(value);
                ReportPropertyChanging("Key");
                _Key = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Key");
                OnKeyChanged();
            }
        }
        private global::System.String _Key;
        partial void OnKeyChanging(global::System.String value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DFLinkSTModel", Name="TaskSchedule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaskSchedule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaskSchedule object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="taskId">Initial value of the TaskId property.</param>
        /// <param name="licenseKey">Initial value of the LicenseKey property.</param>
        /// <param name="key">Initial value of the Key property.</param>
        public static TaskSchedule CreateTaskSchedule(global::System.Int32 id, global::System.Int32 taskId, global::System.String licenseKey, global::System.String key)
        {
            TaskSchedule taskSchedule = new TaskSchedule();
            taskSchedule.Id = id;
            taskSchedule.TaskId = taskId;
            taskSchedule.LicenseKey = licenseKey;
            taskSchedule.Key = key;
            return taskSchedule;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaskId
        {
            get
            {
                return _TaskId;
            }
            set
            {
                OnTaskIdChanging(value);
                ReportPropertyChanging("TaskId");
                _TaskId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaskId");
                OnTaskIdChanged();
            }
        }
        private global::System.Int32 _TaskId;
        partial void OnTaskIdChanging(global::System.Int32 value);
        partial void OnTaskIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LicenseKey
        {
            get
            {
                return _LicenseKey;
            }
            set
            {
                OnLicenseKeyChanging(value);
                ReportPropertyChanging("LicenseKey");
                _LicenseKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LicenseKey");
                OnLicenseKeyChanged();
            }
        }
        private global::System.String _LicenseKey;
        partial void OnLicenseKeyChanging(global::System.String value);
        partial void OnLicenseKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Key
        {
            get
            {
                return _Key;
            }
            set
            {
                OnKeyChanging(value);
                ReportPropertyChanging("Key");
                _Key = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Key");
                OnKeyChanged();
            }
        }
        private global::System.String _Key;
        partial void OnKeyChanging(global::System.String value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion
    
    }

    #endregion
    
}
